!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.Meyda=e()}}(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){"use strict";!function(exports,undefined){var DefaultArrayType=Float32Array,sqrt=Math.sqrt,sqr=function(number){return Math.pow(number,2)},isComplexArray,ComplexArray;exports.isComplexArray=isComplexArray=function(obj){return obj!==undefined&&obj.hasOwnProperty!==undefined&&obj.hasOwnProperty("real")&&obj.hasOwnProperty("imag")};exports.ComplexArray=ComplexArray=function(other,opt_array_type){if(isComplexArray(other)){this.ArrayType=other.ArrayType;this.real=new this.ArrayType(other.real);this.imag=new this.ArrayType(other.imag)}else{this.ArrayType=opt_array_type||DefaultArrayType;this.real=new this.ArrayType(other);this.imag=new this.ArrayType(this.real.length)}this.length=this.real.length};ComplexArray.prototype.toString=function(){var components=[];this.forEach(function(c_value,i){components.push("("+c_value.real.toFixed(2)+","+c_value.imag.toFixed(2)+")")});return"["+components.join(",")+"]"};ComplexArray.prototype.map=function(mapper){var i,n=this.length,c_value={};for(i=0;i<n;i++){c_value.real=this.real[i];c_value.imag=this.imag[i];mapper(c_value,i,n);this.real[i]=c_value.real;this.imag[i]=c_value.imag}return this};ComplexArray.prototype.forEach=function(iterator){var i,n=this.length,c_value={};for(i=0;i<n;i++){c_value.real=this.real[i];c_value.imag=this.imag[i];iterator(c_value,i,n)}};ComplexArray.prototype.conjugate=function(){return new ComplexArray(this).map(function(value){value.imag*=-1})};function iterable(obj){if(!obj.forEach)obj.forEach=function(iterator){var i,n=this.length;for(i=0;i<n;i++)iterator(this[i],i,n)};return obj}ComplexArray.prototype.magnitude=function(){var mags=new this.ArrayType(this.length);this.forEach(function(value,i){mags[i]=sqrt(sqr(value.real)+sqr(value.imag))});return iterable(mags)}}(typeof exports==="undefined"&&(this.complex_array={})||exports)},{}],2:[function(require,module,exports){"use strict";!function(exports,complex_array){var ComplexArray=complex_array.ComplexArray,PI=Math.PI,SQRT1_2=Math.SQRT1_2,sqrt=Math.sqrt,cos=Math.cos,sin=Math.sin;ComplexArray.prototype.FFT=function(){return FFT(this,false)};exports.FFT=function(input){return ensureComplexArray(input).FFT()};ComplexArray.prototype.InvFFT=function(){return FFT(this,true)};exports.InvFFT=function(input){return ensureComplexArray(input).InvFFT()};ComplexArray.prototype.frequencyMap=function(filterer){return this.FFT().map(filterer).InvFFT()};exports.frequencyMap=function(input,filterer){return ensureComplexArray(input).frequencyMap(filterer)};function ensureComplexArray(input){return complex_array.isComplexArray(input)&&input||new ComplexArray(input)}function FFT(input,inverse){var n=input.length;if(n&n-1){return FFT_Recursive(input,inverse)}else{return FFT_2_Iterative(input,inverse)}}function FFT_Recursive(input,inverse){var n=input.length,i,j,output,f_r,f_i,del_f_r,del_f_i,p,m,normalisation,recursive_result,_swap,_real,_imag;if(n===1){return input}output=new ComplexArray(n,input.ArrayType);p=LowestOddFactor(n);m=n/p;normalisation=1/sqrt(p);recursive_result=new ComplexArray(m,input.ArrayType);for(j=0;j<p;j++){for(i=0;i<m;i++){recursive_result.real[i]=input.real[i*p+j];recursive_result.imag[i]=input.imag[i*p+j]}if(m>1){recursive_result=FFT(recursive_result,inverse)}del_f_r=cos(2*PI*j/n);del_f_i=(inverse?-1:1)*sin(2*PI*j/n);f_r=1;f_i=0;for(i=0;i<n;i++){_real=recursive_result.real[i%m];_imag=recursive_result.imag[i%m];output.real[i]+=f_r*_real-f_i*_imag;output.imag[i]+=f_r*_imag+f_i*_real;_swap=f_r*del_f_r-f_i*del_f_i;f_i=f_r*del_f_i+f_i*del_f_r;f_r=_swap}}for(i=0;i<n;i++){input.real[i]=normalisation*output.real[i];input.imag[i]=normalisation*output.imag[i]}return input}function FFT_2_Iterative(input,inverse){var n=input.length,i,j,output,output_r,output_i,f_r,f_i,del_f_r,del_f_i,temp,l_index,r_index,left_r,left_i,right_r,right_i,width;output=BitReverseComplexArray(input);output_r=output.real;output_i=output.imag;width=1;while(width<n){del_f_r=cos(PI/width);del_f_i=(inverse?-1:1)*sin(PI/width);for(i=0;i<n/(2*width);i++){f_r=1;f_i=0;for(j=0;j<width;j++){l_index=2*i*width+j;r_index=l_index+width;left_r=output_r[l_index];left_i=output_i[l_index];right_r=f_r*output_r[r_index]-f_i*output_i[r_index];right_i=f_i*output_r[r_index]+f_r*output_i[r_index];output_r[l_index]=SQRT1_2*(left_r+right_r);output_i[l_index]=SQRT1_2*(left_i+right_i);output_r[r_index]=SQRT1_2*(left_r-right_r);output_i[r_index]=SQRT1_2*(left_i-right_i);temp=f_r*del_f_r-f_i*del_f_i;f_i=f_r*del_f_i+f_i*del_f_r;f_r=temp}}width<<=1}return output}function BitReverseIndex(index,n){var bitreversed_index=0;while(n>1){bitreversed_index<<=1;bitreversed_index+=index&1;index>>=1;n>>=1}return bitreversed_index}function BitReverseComplexArray(array){var n=array.length,flips={},swap,i;for(i=0;i<n;i++){var r_i=BitReverseIndex(i,n);if(flips.hasOwnProperty(i)||flips.hasOwnProperty(r_i))continue;swap=array.real[r_i];array.real[r_i]=array.real[i];array.real[i]=swap;swap=array.imag[r_i];array.imag[r_i]=array.imag[i];array.imag[i]=swap;flips[i]=flips[r_i]=true}return array}function LowestOddFactor(n){var factor=3,sqrt_n=sqrt(n);while(factor<=sqrt_n){if(n%factor===0)return factor;factor=factor+2}return n}}(typeof exports==="undefined"&&(this.fft={})||exports,typeof require==="undefined"&&this.complex_array||require("./complex_array"))},{"./complex_array":1}],3:[function(require,module,exports){module.exports=function(bufferSize,m){return m.ampSpectrum}},{}],4:[function(require,module,exports){module.exports=function(bufferSize,m){return m.signal}},{}],5:[function(require,module,exports){module.exports=function(bufferSize,m){return m.complexSpectrum}},{}],6:[function(require,module,exports){module.exports=function(bufferSize,m){var energy=0;for(var i=0;i<m.signal.length;i++){energy+=Math.pow(Math.abs(m.signal[i]),2)}return energy}},{}],7:[function(require,module,exports){module.exports={buffer:require("./buffer"),rms:require("./rms"),energy:require("./energy"),complexSpectrum:require("./complexSpectrum"),spectralSlope:require("./spectralSlope"),spectralCentroid:require("./spectralCentroid"),spectralRolloff:require("./spectralRolloff"),spectralFlatness:require("./spectralFlatness"),spectralSpread:require("./spectralSpread"),spectralSkewness:require("./spectralSkewness"),spectralKurtosis:require("./spectralKurtosis"),amplitudeSpectrum:require("./amplitudeSpectrum"),zcr:require("./zcr"),powerSpectrum:require("./powerSpectrum"),loudness:require("./loudness"),perceptualSpread:require("./perceptualSpread"),perceptualSharpness:require("./perceptualSharpness"),mfcc:require("./mfcc")}},{"./amplitudeSpectrum":3,"./buffer":4,"./complexSpectrum":5,"./energy":6,"./loudness":8,"./mfcc":9,"./perceptualSharpness":10,"./perceptualSpread":11,"./powerSpectrum":12,"./rms":13,"./spectralCentroid":14,"./spectralFlatness":15,"./spectralKurtosis":16,"./spectralRolloff":17,"./spectralSkewness":18,"./spectralSlope":19,"./spectralSpread":20,"./zcr":21}],8:[function(require,module,exports){module.exports=function(bufferSize,m){var barkScale=new Float32Array(m.ampSpectrum.length);var NUM_BARK_BANDS=24;var specific=new Float32Array(NUM_BARK_BANDS);var tot=0;var normalisedSpectrum=m.ampSpectrum;var bbLimits=new Int32Array(NUM_BARK_BANDS+1);for(var i=0;i<barkScale.length;i++){barkScale[i]=i*m.audioContext.sampleRate/bufferSize;barkScale[i]=13*Math.atan(barkScale[i]/1315.8)+3.5*Math.atan(Math.pow(barkScale[i]/7518,2))}bbLimits[0]=0;var currentBandEnd=barkScale[m.ampSpectrum.length-1]/NUM_BARK_BANDS;var currentBand=1;for(var i=0;i<m.ampSpectrum.length;i++){while(barkScale[i]>currentBandEnd){bbLimits[currentBand++]=i;currentBandEnd=currentBand*barkScale[m.ampSpectrum.length-1]/NUM_BARK_BANDS}}bbLimits[NUM_BARK_BANDS]=m.ampSpectrum.length-1;for(var i=0;i<NUM_BARK_BANDS;i++){var sum=0;for(var j=bbLimits[i];j<bbLimits[i+1];j++){sum+=normalisedSpectrum[j]}specific[i]=Math.pow(sum,.23)}for(var i=0;i<specific.length;i++){tot+=specific[i]}return{specific:specific,total:tot}}},{}],9:[function(require,module,exports){var powerSpectrum=require("./powerSpectrum");module.exports=function(bufferSize,m){var powSpec=powerSpectrum(bufferSize,m);var freqToMel=function(freqValue){var melValue=1125*Math.log(1+freqValue/700);return melValue};var melToFreq=function(melValue){var freqValue=700*(Math.exp(melValue/1125)-1);return freqValue};var numFilters=26;var melValues=new Float32Array(numFilters+2);var melValuesInFreq=new Float32Array(numFilters+2);var lowerLimitFreq=0;var upperLimitFreq=audioContext.sampleRate/2;var lowerLimitMel=freqToMel(lowerLimitFreq);var upperLimitMel=freqToMel(upperLimitFreq);var range=upperLimitMel-lowerLimitMel;var valueToAdd=range/(numFilters+1);var fftBinsOfFreq=Array(numFilters+2);for(var i=0;i<melValues.length;i++){melValues[i]=i*valueToAdd;melValuesInFreq[i]=melToFreq(melValues[i]);fftBinsOfFreq[i]=Math.floor((bufferSize+1)*melValuesInFreq[i]/audioContext.sampleRate)}var filterBank=Array(numFilters);for(var j=0;j<filterBank.length;j++){filterBank[j]=Array.apply(null,new Array(bufferSize/2+1)).map(Number.prototype.valueOf,0);for(var i=fftBinsOfFreq[j];i<fftBinsOfFreq[j+1];i++){filterBank[j][i]=(i-fftBinsOfFreq[j])/(fftBinsOfFreq[j+1]-fftBinsOfFreq[j])}for(var i=fftBinsOfFreq[j+1];i<fftBinsOfFreq[j+2];i++){filterBank[j][i]=(fftBinsOfFreq[j+2]-i)/(fftBinsOfFreq[j+2]-fftBinsOfFreq[j+1])}}var loggedMelBands=new Float32Array(numFilters);for(var i=0;i<loggedMelBands.length;i++){loggedMelBands[i]=0;for(var j=0;j<bufferSize/2;j++){filterBank[i][j]=filterBank[i][j]*powSpec[j];loggedMelBands[i]+=filterBank[i][j]}loggedMelBands[i]=Math.log(loggedMelBands[i])}var k=Math.PI/numFilters;var w1=1/Math.sqrt(numFilters);var w2=Math.sqrt(2/numFilters);var numCoeffs=13;var dctMatrix=new Float32Array(numCoeffs*numFilters);for(var i=0;i<numCoeffs;i++){for(var j=0;j<numFilters;j++){var idx=i+j*numCoeffs;if(i==0){dctMatrix[idx]=w1*Math.cos(k*(i+1)*(j+.5))}else{dctMatrix[idx]=w2*Math.cos(k*(i+1)*(j+.5))}}}var mfccs=new Float32Array(numCoeffs);for(var k=0;k<numCoeffs;k++){var v=0;for(var n=0;n<numFilters;n++){var idx=k+n*numCoeffs;v+=dctMatrix[idx]*loggedMelBands[n]}mfccs[k]=v/numCoeffs}return mfccs}},{"./powerSpectrum":12}],10:[function(require,module,exports){module.exports=function(bufferSize,m){var loudness=m.featureExtractors.loudness(bufferSize,m);var spec=loudness.specific;var output=0;for(var i=0;i<spec.length;i++){if(i<15){output+=(i+1)*spec[i+1]}else{output+=.066*Math.exp(.171*(i+1))}}output*=.11/loudness.total;return output}},{}],11:[function(require,module,exports){module.exports=function(bufferSize,m){var loudness=m.featureExtractors.loudness(bufferSize,m);var max=0;for(var i=0;i<loudness.specific.length;i++){if(loudness.specific[i]>max){max=loudness.specific[i]}}var spread=Math.pow((loudness.total-max)/loudness.total,2);return spread}},{}],12:[function(require,module,exports){module.exports=function(bufferSize,m){var powerSpectrum=new Float32Array(m.ampSpectrum.length);for(var i=0;i<powerSpectrum.length;i++){powerSpectrum[i]=Math.pow(m.ampSpectrum[i],2)}return powerSpectrum}},{}],13:[function(require,module,exports){module.exports=function(bufferSize,m){var rms=0;for(var i=0;i<m.signal.length;i++){rms+=Math.pow(m.signal[i],2)}rms=rms/m.signal.length;rms=Math.sqrt(rms);return rms}},{}],14:[function(require,module,exports){module.exports=function(bufferSize,m){return µ(1,m.ampSpectrum)}},{}],15:[function(require,module,exports){module.exports=function(bufferSize,m){var ampspec=m.ampSpectrum;var numerator=0;var denominator=0;for(var i=0;i<ampspec.length;i++){numerator+=Math.log(ampspec[i]);denominator+=ampspec[i]}return Math.exp(numerator/ampspec.length)*ampspec.length/denominator}},{}],16:[function(require,module,exports){module.exports=function(bufferSize,m){var ampspec=m.ampSpectrum;var µ1=µ(1,ampspec);var µ2=µ(2,ampspec);var µ3=µ(3,ampspec);var µ4=µ(4,ampspec);var numerator=-3*Math.pow(µ1,4)+6*µ1*µ2-4*µ1*µ3+µ4;var denominator=Math.pow(Math.sqrt(µ2-Math.pow(µ1,2)),4);return numerator/denominator}},{}],17:[function(require,module,exports){module.exports=function(bufferSize,m){var ampspec=m.ampSpectrum;var nyqBin=m.audioContext.sampleRate/(2*(ampspec.length-1));var ec=0;for(var i=0;i<ampspec.length;i++){ec+=ampspec[i]}var threshold=.99*ec;var n=ampspec.length-1;while(ec>threshold&&n>=0){ec-=ampspec[n];--n}return(n+1)*nyqBin}},{}],18:[function(require,module,exports){module.exports=function(bufferSize,m,spectrum){var ampspec=m.ampSpectrum;var µ1=µ(1,ampspec);var µ2=µ(2,ampspec);var µ3=µ(3,ampspec);var numerator=2*Math.pow(µ1,3)-3*µ1*µ2+µ3;var denominator=Math.pow(Math.sqrt(µ2-Math.pow(µ1,2)),3);return numerator/denominator}},{}],19:[function(require,module,exports){module.exports=function(bufferSize,m){var ampSum=0;var freqSum=0;var freqs=new Float32Array(m.ampSpectrum.length);var powFreqSum=0;var ampFreqSum=0;for(var i=0;i<m.ampSpectrum.length;i++){ampSum+=m.ampSpectrum[i];var curFreq=i*m.audioContext.sampleRate/bufferSize;freqs[i]=curFreq;powFreqSum+=curFreq*curFreq;freqSum+=curFreq;ampFreqSum+=curFreq*m.ampSpectrum[i]}return(m.ampSpectrum.length*ampFreqSum-freqSum*ampSum)/(ampSum*(powFreqSum-Math.pow(freqSum,2)))}},{}],20:[function(require,module,exports){module.exports=function(bufferSize,m){var ampspec=m.ampSpectrum;return Math.sqrt(µ(2,ampspec)-Math.pow(µ(1,ampspec),2))}},{}],21:[function(require,module,exports){module.exports=function(bufferSize,m){var zcr=0;for(var i=0;i<m.signal.length;i++){if(m.signal[i]>=0&&m.signal[i+1]<0||m.signal[i]<0&&m.signal[i+1]>=0){zcr++}}return zcr}},{}],22:[function(require,module,exports){var ComplexArray=require("../lib/jsfft/complex_array").ComplexArray;var fft=require("../lib/jsfft/fft");module.exports=function(audioContext,src,bufSize,callback){var self=this;self.featureExtractors=require("./extractors");var bufferSize=bufSize?bufSize:256;var source=src;var EXTRACTION_STARTED=false;var _featuresToExtract;var µ=function(i,amplitudeSpect){var numerator=0;var denominator=0;for(var k=0;k<amplitudeSpect.length;k++){numerator+=Math.pow(k,i)*Math.abs(amplitudeSpect[k]);denominator+=amplitudeSpect[k]}return numerator/denominator};var isPowerOfTwo=function(num){while(num%2==0&&num>1){num/=2}return num==1};self.barkScale=new Float32Array(bufSize);for(var i=0;i<self.barkScale.length;i++){self.barkScale[i]=i*audioContext.sampleRate/bufSize;self.barkScale[i]=13*Math.atan(self.barkScale[i]/1315.8)+3.5*Math.atan(Math.pow(self.barkScale[i]/7518,2))}self.windowingFunction="hanning";self.hanning=new Float32Array(bufSize);for(var i=0;i<bufSize;i++){self.hanning[i]=.5-.5*Math.cos(2*Math.PI*i/(bufSize-1))}self.hamming=new Float32Array(bufSize);for(var i=0;i<bufSize;i++){self.hamming[i]=.54-.46*Math.cos(2*Math.PI*(i/bufSize-1))}self.windowing=function(sig,type){var windowed=new Float32Array(sig.length);var i,len=sig.length;if(type=="hanning"){for(i=0;i<len;i++){windowed[i]=sig[i]*self.hanning[i]}}else if(type=="hamming"){for(i=0;i<len;i++){windowed[i]=sig[i]*self.hamming[i]}}else if(type=="blackman"){for(i=0;i<len;i++){windowed[i]=sig[i]*self.blackman[i]}}return windowed};self.setSource=function(_src){source=_src;source.connect(window.spn)};if(isPowerOfTwo(bufferSize)&&audioContext){self.featureInfo={buffer:{type:"array"},rms:{type:"number"},energy:{type:"number"},zcr:{type:"number"},complexSpectrum:{type:"multipleArrays",arrayNames:{1:"real",2:"imag"}},amplitudeSpectrum:{type:"array"},powerSpectrum:{type:"array"},spectralCentroid:{type:"number"},spectralFlatness:{type:"number"},spectralSlope:{type:"number"},spectralRolloff:{type:"number"},spectralSpread:{type:"number"},spectralSkewness:{type:"number"},spectralKurtosis:{type:"number"},loudness:{type:"multipleArrays",arrayNames:{1:"total",2:"specific"}},perceptualSpread:{type:"number"},perceptualSharpness:{type:"number"},mfcc:{type:"array"}};var data=new ComplexArray(bufferSize);var spec=data.FFT();self.complexSpectrum=spec;self.ampSpectrum=new Float32Array(bufferSize/2);window.spn=audioContext.createScriptProcessor(bufferSize,1,1);spn.connect(audioContext.destination);window.spn.onaudioprocess=function(e){var inputData=e.inputBuffer.getChannelData(0);self.signal=inputData;var windowedSignal=self.windowing(self.signal,self.windowingFunction);data.map(function(value,i,n){value.real=windowedSignal[i]});for(var i=0;i<bufferSize/2;i++){self.ampSpectrum[i]=Math.sqrt(Math.pow(spec.real[i],2)+Math.pow(spec.imag[i],2))}if(typeof callback==="function"&&EXTRACTION_STARTED){callback(self.get(_featuresToExtract))}};self.start=function(features){_featuresToExtract=features;EXTRACTION_STARTED=true};self.stop=function(){EXTRACTION_STARTED=false};self.audioContext=audioContext;self.get=function(feature){if(typeof feature==="object"){var results={};for(var x=0;x<feature.length;x++){try{results[feature[x]]=self.featureExtractors[feature[x]](bufferSize,self)}catch(e){console.error(e)}}return results}else if(typeof feature==="string"){return self.featureExtractors[feature](bufferSize,self)}else{throw"Invalid Feature Format"}};source.connect(window.spn,0,0);return self}else{if(typeof audioContext=="undefined"){throw"AudioContext wasn't specified: Meyda will not run."}else{throw"Buffer size is not a power of two: Meyda will not run."}}}},{"../lib/jsfft/complex_array":1,"../lib/jsfft/fft":2,"./extractors":7}]},{},[22])(22)});!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.Meyda=e()}}(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){"use strict";!function(exports,undefined){var DefaultArrayType=Float32Array,sqrt=Math.sqrt,sqr=function(number){return Math.pow(number,2)},isComplexArray,ComplexArray;exports.isComplexArray=isComplexArray=function(obj){return obj!==undefined&&obj.hasOwnProperty!==undefined&&obj.hasOwnProperty("real")&&obj.hasOwnProperty("imag")};exports.ComplexArray=ComplexArray=function(other,opt_array_type){if(isComplexArray(other)){this.ArrayType=other.ArrayType;this.real=new this.ArrayType(other.real);this.imag=new this.ArrayType(other.imag)}else{this.ArrayType=opt_array_type||DefaultArrayType;this.real=new this.ArrayType(other);this.imag=new this.ArrayType(this.real.length)}this.length=this.real.length};ComplexArray.prototype.toString=function(){var components=[];this.forEach(function(c_value,i){components.push("("+c_value.real.toFixed(2)+","+c_value.imag.toFixed(2)+")")});return"["+components.join(",")+"]"};ComplexArray.prototype.map=function(mapper){var i,n=this.length,c_value={};for(i=0;i<n;i++){c_value.real=this.real[i];c_value.imag=this.imag[i];mapper(c_value,i,n);this.real[i]=c_value.real;this.imag[i]=c_value.imag}return this};ComplexArray.prototype.forEach=function(iterator){var i,n=this.length,c_value={};for(i=0;i<n;i++){c_value.real=this.real[i];c_value.imag=this.imag[i];iterator(c_value,i,n)}};ComplexArray.prototype.conjugate=function(){return new ComplexArray(this).map(function(value){value.imag*=-1})};function iterable(obj){if(!obj.forEach)obj.forEach=function(iterator){var i,n=this.length;for(i=0;i<n;i++)iterator(this[i],i,n)};return obj}ComplexArray.prototype.magnitude=function(){var mags=new this.ArrayType(this.length);this.forEach(function(value,i){mags[i]=sqrt(sqr(value.real)+sqr(value.imag))});return iterable(mags)}}(typeof exports==="undefined"&&(this.complex_array={})||exports)},{}],2:[function(require,module,exports){"use strict";!function(exports,complex_array){var ComplexArray=complex_array.ComplexArray,PI=Math.PI,SQRT1_2=Math.SQRT1_2,sqrt=Math.sqrt,cos=Math.cos,sin=Math.sin;ComplexArray.prototype.FFT=function(){return FFT(this,false)};exports.FFT=function(input){return ensureComplexArray(input).FFT()};ComplexArray.prototype.InvFFT=function(){return FFT(this,true)};exports.InvFFT=function(input){return ensureComplexArray(input).InvFFT()};ComplexArray.prototype.frequencyMap=function(filterer){return this.FFT().map(filterer).InvFFT()};exports.frequencyMap=function(input,filterer){return ensureComplexArray(input).frequencyMap(filterer)};function ensureComplexArray(input){return complex_array.isComplexArray(input)&&input||new ComplexArray(input)}function FFT(input,inverse){var n=input.length;if(n&n-1){return FFT_Recursive(input,inverse)}else{return FFT_2_Iterative(input,inverse)}}function FFT_Recursive(input,inverse){var n=input.length,i,j,output,f_r,f_i,del_f_r,del_f_i,p,m,normalisation,recursive_result,_swap,_real,_imag;if(n===1){return input}output=new ComplexArray(n,input.ArrayType);p=LowestOddFactor(n);m=n/p;normalisation=1/sqrt(p);recursive_result=new ComplexArray(m,input.ArrayType);for(j=0;j<p;j++){for(i=0;i<m;i++){recursive_result.real[i]=input.real[i*p+j];recursive_result.imag[i]=input.imag[i*p+j]}if(m>1){recursive_result=FFT(recursive_result,inverse)}del_f_r=cos(2*PI*j/n);del_f_i=(inverse?-1:1)*sin(2*PI*j/n);f_r=1;f_i=0;for(i=0;i<n;i++){_real=recursive_result.real[i%m];_imag=recursive_result.imag[i%m];output.real[i]+=f_r*_real-f_i*_imag;output.imag[i]+=f_r*_imag+f_i*_real;_swap=f_r*del_f_r-f_i*del_f_i;f_i=f_r*del_f_i+f_i*del_f_r;f_r=_swap}}for(i=0;i<n;i++){input.real[i]=normalisation*output.real[i];input.imag[i]=normalisation*output.imag[i]}return input}function FFT_2_Iterative(input,inverse){var n=input.length,i,j,output,output_r,output_i,f_r,f_i,del_f_r,del_f_i,temp,l_index,r_index,left_r,left_i,right_r,right_i,width;output=BitReverseComplexArray(input);output_r=output.real;output_i=output.imag;width=1;while(width<n){del_f_r=cos(PI/width);del_f_i=(inverse?-1:1)*sin(PI/width);for(i=0;i<n/(2*width);i++){f_r=1;f_i=0;for(j=0;j<width;j++){l_index=2*i*width+j;r_index=l_index+width;left_r=output_r[l_index];left_i=output_i[l_index];right_r=f_r*output_r[r_index]-f_i*output_i[r_index];right_i=f_i*output_r[r_index]+f_r*output_i[r_index];output_r[l_index]=SQRT1_2*(left_r+right_r);output_i[l_index]=SQRT1_2*(left_i+right_i);output_r[r_index]=SQRT1_2*(left_r-right_r);output_i[r_index]=SQRT1_2*(left_i-right_i);temp=f_r*del_f_r-f_i*del_f_i;f_i=f_r*del_f_i+f_i*del_f_r;f_r=temp}}width<<=1}return output}function BitReverseIndex(index,n){var bitreversed_index=0;while(n>1){bitreversed_index<<=1;bitreversed_index+=index&1;index>>=1;n>>=1}return bitreversed_index}function BitReverseComplexArray(array){var n=array.length,flips={},swap,i;for(i=0;i<n;i++){var r_i=BitReverseIndex(i,n);if(flips.hasOwnProperty(i)||flips.hasOwnProperty(r_i))continue;swap=array.real[r_i];array.real[r_i]=array.real[i];array.real[i]=swap;swap=array.imag[r_i];array.imag[r_i]=array.imag[i];array.imag[i]=swap;flips[i]=flips[r_i]=true}return array}function LowestOddFactor(n){var factor=3,sqrt_n=sqrt(n);while(factor<=sqrt_n){if(n%factor===0)return factor;factor=factor+2}return n}}(typeof exports==="undefined"&&(this.fft={})||exports,typeof require==="undefined"&&this.complex_array||require("./complex_array"))},{"./complex_array":1}],3:[function(require,module,exports){module.exports=function(bufferSize,m){return m.ampSpectrum}},{}],4:[function(require,module,exports){module.exports=function(bufferSize,m){return m.signal}},{}],5:[function(require,module,exports){module.exports=function(bufferSize,m){return m.complexSpectrum}},{}],6:[function(require,module,exports){module.exports=function(bufferSize,m){var energy=0;for(var i=0;i<m.signal.length;i++){energy+=Math.pow(Math.abs(m.signal[i]),2)}return energy}},{}],7:[function(require,module,exports){module.exports={buffer:require("./buffer"),rms:require("./rms"),energy:require("./energy"),complexSpectrum:require("./complexSpectrum"),spectralSlope:require("./spectralSlope"),spectralCentroid:require("./spectralCentroid"),spectralRolloff:require("./spectralRolloff"),spectralFlatness:require("./spectralFlatness"),spectralSpread:require("./spectralSpread"),spectralSkewness:require("./spectralSkewness"),spectralKurtosis:require("./spectralKurtosis"),amplitudeSpectrum:require("./amplitudeSpectrum"),zcr:require("./zcr"),powerSpectrum:require("./powerSpectrum"),loudness:require("./loudness"),perceptualSpread:require("./perceptualSpread"),perceptualSharpness:require("./perceptualSharpness"),mfcc:require("./mfcc")}},{"./amplitudeSpectrum":3,"./buffer":4,"./complexSpectrum":5,"./energy":6,"./loudness":8,"./mfcc":9,"./perceptualSharpness":10,"./perceptualSpread":11,"./powerSpectrum":12,"./rms":13,"./spectralCentroid":14,"./spectralFlatness":15,"./spectralKurtosis":16,"./spectralRolloff":17,"./spectralSkewness":18,"./spectralSlope":19,"./spectralSpread":20,"./zcr":21}],8:[function(require,module,exports){module.exports=function(bufferSize,m){var barkScale=new Float32Array(m.ampSpectrum.length);var NUM_BARK_BANDS=24;var specific=new Float32Array(NUM_BARK_BANDS);var tot=0;var normalisedSpectrum=m.ampSpectrum;var bbLimits=new Int32Array(NUM_BARK_BANDS+1);for(var i=0;i<barkScale.length;i++){barkScale[i]=i*m.audioContext.sampleRate/bufferSize;barkScale[i]=13*Math.atan(barkScale[i]/1315.8)+3.5*Math.atan(Math.pow(barkScale[i]/7518,2))}bbLimits[0]=0;var currentBandEnd=barkScale[m.ampSpectrum.length-1]/NUM_BARK_BANDS;var currentBand=1;for(var i=0;i<m.ampSpectrum.length;i++){while(barkScale[i]>currentBandEnd){bbLimits[currentBand++]=i;currentBandEnd=currentBand*barkScale[m.ampSpectrum.length-1]/NUM_BARK_BANDS}}bbLimits[NUM_BARK_BANDS]=m.ampSpectrum.length-1;for(var i=0;i<NUM_BARK_BANDS;i++){var sum=0;for(var j=bbLimits[i];j<bbLimits[i+1];j++){sum+=normalisedSpectrum[j]}specific[i]=Math.pow(sum,.23)}for(var i=0;i<specific.length;i++){tot+=specific[i]}return{specific:specific,total:tot}}},{}],9:[function(require,module,exports){var powerSpectrum=require("./powerSpectrum");module.exports=function(bufferSize,m){var powSpec=powerSpectrum(bufferSize,m);var freqToMel=function(freqValue){var melValue=1125*Math.log(1+freqValue/700);return melValue};var melToFreq=function(melValue){var freqValue=700*(Math.exp(melValue/1125)-1);return freqValue};var numFilters=26;var melValues=new Float32Array(numFilters+2);var melValuesInFreq=new Float32Array(numFilters+2);var lowerLimitFreq=0;var upperLimitFreq=audioContext.sampleRate/2;var lowerLimitMel=freqToMel(lowerLimitFreq);var upperLimitMel=freqToMel(upperLimitFreq);var range=upperLimitMel-lowerLimitMel;var valueToAdd=range/(numFilters+1);var fftBinsOfFreq=Array(numFilters+2);for(var i=0;i<melValues.length;i++){melValues[i]=i*valueToAdd;melValuesInFreq[i]=melToFreq(melValues[i]);fftBinsOfFreq[i]=Math.floor((bufferSize+1)*melValuesInFreq[i]/audioContext.sampleRate)}var filterBank=Array(numFilters);for(var j=0;j<filterBank.length;j++){filterBank[j]=Array.apply(null,new Array(bufferSize/2+1)).map(Number.prototype.valueOf,0);for(var i=fftBinsOfFreq[j];i<fftBinsOfFreq[j+1];i++){filterBank[j][i]=(i-fftBinsOfFreq[j])/(fftBinsOfFreq[j+1]-fftBinsOfFreq[j])}for(var i=fftBinsOfFreq[j+1];i<fftBinsOfFreq[j+2];i++){filterBank[j][i]=(fftBinsOfFreq[j+2]-i)/(fftBinsOfFreq[j+2]-fftBinsOfFreq[j+1])}}var loggedMelBands=new Float32Array(numFilters);for(var i=0;i<loggedMelBands.length;i++){loggedMelBands[i]=0;for(var j=0;j<bufferSize/2;j++){filterBank[i][j]=filterBank[i][j]*powSpec[j];loggedMelBands[i]+=filterBank[i][j]}loggedMelBands[i]=Math.log(loggedMelBands[i])}var k=Math.PI/numFilters;var w1=1/Math.sqrt(numFilters);var w2=Math.sqrt(2/numFilters);var numCoeffs=13;var dctMatrix=new Float32Array(numCoeffs*numFilters);for(var i=0;i<numCoeffs;i++){for(var j=0;j<numFilters;j++){var idx=i+j*numCoeffs;if(i==0){dctMatrix[idx]=w1*Math.cos(k*(i+1)*(j+.5))}else{dctMatrix[idx]=w2*Math.cos(k*(i+1)*(j+.5))}}}var mfccs=new Float32Array(numCoeffs);for(var k=0;k<numCoeffs;k++){var v=0;for(var n=0;n<numFilters;n++){var idx=k+n*numCoeffs;v+=dctMatrix[idx]*loggedMelBands[n]}mfccs[k]=v/numCoeffs}return mfccs}},{"./powerSpectrum":12}],10:[function(require,module,exports){module.exports=function(bufferSize,m){var loudness=m.featureExtractors.loudness(bufferSize,m);var spec=loudness.specific;var output=0;for(var i=0;i<spec.length;i++){if(i<15){output+=(i+1)*spec[i+1]}else{output+=.066*Math.exp(.171*(i+1))}}output*=.11/loudness.total;return output}},{}],11:[function(require,module,exports){module.exports=function(bufferSize,m){var loudness=m.featureExtractors.loudness(bufferSize,m);var max=0;for(var i=0;i<loudness.specific.length;i++){if(loudness.specific[i]>max){max=loudness.specific[i]}}var spread=Math.pow((loudness.total-max)/loudness.total,2);return spread}},{}],12:[function(require,module,exports){module.exports=function(bufferSize,m){var powerSpectrum=new Float32Array(m.ampSpectrum.length);for(var i=0;i<powerSpectrum.length;i++){powerSpectrum[i]=Math.pow(m.ampSpectrum[i],2)}return powerSpectrum}},{}],13:[function(require,module,exports){module.exports=function(bufferSize,m){var rms=0;for(var i=0;i<m.signal.length;i++){rms+=Math.pow(m.signal[i],2)}rms=rms/m.signal.length;rms=Math.sqrt(rms);return rms}},{}],14:[function(require,module,exports){module.exports=function(bufferSize,m){return µ(1,m.ampSpectrum)}},{}],15:[function(require,module,exports){module.exports=function(bufferSize,m){var ampspec=m.ampSpectrum;var numerator=0;var denominator=0;for(var i=0;i<ampspec.length;i++){numerator+=Math.log(ampspec[i]);denominator+=ampspec[i]}return Math.exp(numerator/ampspec.length)*ampspec.length/denominator}},{}],16:[function(require,module,exports){module.exports=function(bufferSize,m){var ampspec=m.ampSpectrum;var µ1=µ(1,ampspec);var µ2=µ(2,ampspec);var µ3=µ(3,ampspec);var µ4=µ(4,ampspec);var numerator=-3*Math.pow(µ1,4)+6*µ1*µ2-4*µ1*µ3+µ4;var denominator=Math.pow(Math.sqrt(µ2-Math.pow(µ1,2)),4);return numerator/denominator}},{}],17:[function(require,module,exports){module.exports=function(bufferSize,m){var ampspec=m.ampSpectrum;var nyqBin=m.audioContext.sampleRate/(2*(ampspec.length-1));var ec=0;for(var i=0;i<ampspec.length;i++){ec+=ampspec[i]}var threshold=.99*ec;var n=ampspec.length-1;while(ec>threshold&&n>=0){ec-=ampspec[n];--n}return(n+1)*nyqBin}},{}],18:[function(require,module,exports){module.exports=function(bufferSize,m,spectrum){var ampspec=m.ampSpectrum;var µ1=µ(1,ampspec);var µ2=µ(2,ampspec);var µ3=µ(3,ampspec);var numerator=2*Math.pow(µ1,3)-3*µ1*µ2+µ3;var denominator=Math.pow(Math.sqrt(µ2-Math.pow(µ1,2)),3);return numerator/denominator}},{}],19:[function(require,module,exports){module.exports=function(bufferSize,m){var ampSum=0;var freqSum=0;var freqs=new Float32Array(m.ampSpectrum.length);var powFreqSum=0;var ampFreqSum=0;for(var i=0;i<m.ampSpectrum.length;i++){ampSum+=m.ampSpectrum[i];var curFreq=i*m.audioContext.sampleRate/bufferSize;freqs[i]=curFreq;powFreqSum+=curFreq*curFreq;freqSum+=curFreq;ampFreqSum+=curFreq*m.ampSpectrum[i]}return(m.ampSpectrum.length*ampFreqSum-freqSum*ampSum)/(ampSum*(powFreqSum-Math.pow(freqSum,2)))}},{}],20:[function(require,module,exports){module.exports=function(bufferSize,m){var ampspec=m.ampSpectrum;return Math.sqrt(µ(2,ampspec)-Math.pow(µ(1,ampspec),2))
}},{}],21:[function(require,module,exports){module.exports=function(bufferSize,m){var zcr=0;for(var i=0;i<m.signal.length;i++){if(m.signal[i]>=0&&m.signal[i+1]<0||m.signal[i]<0&&m.signal[i+1]>=0){zcr++}}return zcr}},{}],22:[function(require,module,exports){var ComplexArray=require("../lib/jsfft/complex_array").ComplexArray;var fft=require("../lib/jsfft/fft");module.exports=function(audioContext,src,bufSize,callback){var self=this;self.featureExtractors=require("./extractors");var bufferSize=bufSize?bufSize:256;var source=src;var EXTRACTION_STARTED=false;var _featuresToExtract;var µ=function(i,amplitudeSpect){var numerator=0;var denominator=0;for(var k=0;k<amplitudeSpect.length;k++){numerator+=Math.pow(k,i)*Math.abs(amplitudeSpect[k]);denominator+=amplitudeSpect[k]}return numerator/denominator};var isPowerOfTwo=function(num){while(num%2==0&&num>1){num/=2}return num==1};self.barkScale=new Float32Array(bufSize);for(var i=0;i<self.barkScale.length;i++){self.barkScale[i]=i*audioContext.sampleRate/bufSize;self.barkScale[i]=13*Math.atan(self.barkScale[i]/1315.8)+3.5*Math.atan(Math.pow(self.barkScale[i]/7518,2))}self.windowingFunction="hanning";self.hanning=new Float32Array(bufSize);for(var i=0;i<bufSize;i++){self.hanning[i]=.5-.5*Math.cos(2*Math.PI*i/(bufSize-1))}self.hamming=new Float32Array(bufSize);for(var i=0;i<bufSize;i++){self.hamming[i]=.54-.46*Math.cos(2*Math.PI*(i/bufSize-1))}self.windowing=function(sig,type){var windowed=new Float32Array(sig.length);var i,len=sig.length;if(type=="hanning"){for(i=0;i<len;i++){windowed[i]=sig[i]*self.hanning[i]}}else if(type=="hamming"){for(i=0;i<len;i++){windowed[i]=sig[i]*self.hamming[i]}}else if(type=="blackman"){for(i=0;i<len;i++){windowed[i]=sig[i]*self.blackman[i]}}return windowed};self.setSource=function(_src){source=_src;source.connect(window.spn)};if(isPowerOfTwo(bufferSize)&&audioContext){self.featureInfo={buffer:{type:"array"},rms:{type:"number"},energy:{type:"number"},zcr:{type:"number"},complexSpectrum:{type:"multipleArrays",arrayNames:{1:"real",2:"imag"}},amplitudeSpectrum:{type:"array"},powerSpectrum:{type:"array"},spectralCentroid:{type:"number"},spectralFlatness:{type:"number"},spectralSlope:{type:"number"},spectralRolloff:{type:"number"},spectralSpread:{type:"number"},spectralSkewness:{type:"number"},spectralKurtosis:{type:"number"},loudness:{type:"multipleArrays",arrayNames:{1:"total",2:"specific"}},perceptualSpread:{type:"number"},perceptualSharpness:{type:"number"},mfcc:{type:"array"}};var data=new ComplexArray(bufferSize);var spec=data.FFT();self.complexSpectrum=spec;self.ampSpectrum=new Float32Array(bufferSize/2);window.spn=audioContext.createScriptProcessor(bufferSize,1,1);spn.connect(audioContext.destination);window.spn.onaudioprocess=function(e){var inputData=e.inputBuffer.getChannelData(0);self.signal=inputData;var windowedSignal=self.windowing(self.signal,self.windowingFunction);data.map(function(value,i,n){value.real=windowedSignal[i]});for(var i=0;i<bufferSize/2;i++){self.ampSpectrum[i]=Math.sqrt(Math.pow(spec.real[i],2)+Math.pow(spec.imag[i],2))}if(typeof callback==="function"&&EXTRACTION_STARTED){callback(self.get(_featuresToExtract))}};self.start=function(features){_featuresToExtract=features;EXTRACTION_STARTED=true};self.stop=function(){EXTRACTION_STARTED=false};self.audioContext=audioContext;self.get=function(feature){if(typeof feature==="object"){var results={};for(var x=0;x<feature.length;x++){try{results[feature[x]]=self.featureExtractors[feature[x]](bufferSize,self)}catch(e){console.error(e)}}return results}else if(typeof feature==="string"){return self.featureExtractors[feature](bufferSize,self)}else{throw"Invalid Feature Format"}};source.connect(window.spn,0,0);return self}else{if(typeof audioContext=="undefined"){throw"AudioContext wasn't specified: Meyda will not run."}else{throw"Buffer size is not a power of two: Meyda will not run."}}}},{"../lib/jsfft/complex_array":1,"../lib/jsfft/fft":2,"./extractors":7}]},{},[22])(22)});